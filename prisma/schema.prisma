// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id               Int                @id @default(autoincrement())
  handle           String             @unique
  productType      String?
  vendor           String?
  tags             String?
  availableForSale Boolean            @default(true)
  variants         Variant[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  metafields       ProductMetafield[]
  content          ProductContent[]
}

model ProductMetafield {
  id        Int      @id @default(autoincrement())
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  namespace String
  key       String
  value     Json?
  helpText  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductContent {
  id          Int            @id @default(autoincrement())
  Product     Product?       @relation(fields: [productId], references: [id])
  productId   Int?
  locale      String
  title       String?
  description String?
  fields      Json?
  media       ProductMedia[]
  published   Boolean        @default(false)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model ProductMedia {
  id               Int             @id @default(autoincrement())
  ProductContent   ProductContent? @relation(fields: [productContentId], references: [id])
  productContentId Int?
  src              String
  thumbnailSrc     String?
  mimeType         String
  // alt text
}

model Variant {
  id                Int                @id @default(autoincrement())
  Product           Product?           @relation(fields: [productId], references: [id])
  productId         Int?
  availableForSale  Boolean            @default(true)
  price             Decimal
  priceCurrency     String
  compareAtPrice    Decimal?
  quantityAvailable Int?
  sku               String?
  weight            Decimal?
  weightUnit        String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  metafields        VariantMetafield[]
  content           VariantContent[]
}

model VariantMetafield {
  id        Int      @id @default(autoincrement())
  Variant   Variant? @relation(fields: [variantId], references: [id])
  variantId Int?
  namespace String
  key       String
  value     Json?
  helpText  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VariantContent {
  id          Int            @id @default(autoincrement())
  Variant     Variant?       @relation(fields: [variantId], references: [id])
  variantId   Int?
  locale      String
  title       String?
  description String?
  swatchSrc   String?
  fields      Json?
  media       VariantMedia[]
  published   Boolean        @default(false)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  // selectedOptions
}

model VariantMedia {
  id               Int             @id @default(autoincrement())
  VariantContent   VariantContent? @relation(fields: [variantContentId], references: [id])
  variantContentId Int?
  src              String
  thumbnailSrc     String?
  mimeType         String
  // alt text
}

model WebhookConfig {
  id        Int    @id @default(autoincrement())
  url       String
  topic     String
  signature String
}
